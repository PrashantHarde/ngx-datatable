{"version":3,"file":"tusharghoshbd-ngx-datatable.js","sources":["ng://@tusharghoshbd/ngx-datatable/lib/services/data-showing.service.ts","ng://@tusharghoshbd/ngx-datatable/lib/component/caption/caption.component.ts","ng://@tusharghoshbd/ngx-datatable/lib/component/ngx-datatable.component.ts","ng://@tusharghoshbd/ngx-datatable/lib/pipe/search.pipe.ts","ng://@tusharghoshbd/ngx-datatable/lib/pipe/sort.pipe.ts","ng://@tusharghoshbd/ngx-datatable/lib/component/ngx-datatable.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n \r\n\r\n@Injectable()\r\nexport class DataShowingService {\r\n    dataShowingSubject = new Subject<any>();\r\n\r\n\r\n    setSataShowingSubject(data) { \r\n        this.dataShowingSubject.next(data);\r\n    }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'ngx-caption',\r\n    templateUrl: './caption.component.html',\r\n    styleUrls: ['./caption.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CaptionComponent implements OnInit {\r\n    \r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        \r\n\r\n    }\r\n}\r\n","import { Component, OnInit, OnChanges, Input, Output,SimpleChanges, EventEmitter, ContentChild, AfterContentInit, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DataShowingService } from '../services/data-showing.service';\r\nimport { CaptionComponent } from './caption/caption.component';\r\n\r\n@Component({\r\n    selector: 'ngx-datatable',\r\n    templateUrl: './ngx-datatable.component.html',\r\n    styleUrls: ['./ngx-datatable.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [DataShowingService]\r\n    \r\n})\r\nexport class NgxDatatableComponent implements OnInit, AfterContentInit,OnChanges {\r\n    private ngUnsubscribe: Subject<void> = new Subject<void>();\r\n    private customOptions = {\r\n        'emptyDataMessage': 'No data available in table',\r\n        'rowClickEvent': false,\r\n        'rowPerPageMenu': [10, 20, 50, 100],\r\n        'rowPerPage': 10,\r\n        'loader': false,\r\n        'checkboxes': false,\r\n        'rowDetailTemplate':undefined\r\n    };\r\n    private _options: any = {};\r\n    private _data: any[] = [];\r\n\r\n\r\n    @Input() tableId = 'ngxDataTableId';\r\n    @Input() columns: any[] = [];\r\n    @Input() set data(arr:any[]) { \r\n        this._data = [];\r\n        arr.forEach((item, index) => {\r\n            this._data.push({\r\n                ...item,\r\n                '_autoId': index\r\n            });\r\n        });\r\n    };\r\n    get data(): any[] {\r\n        return this._data;\r\n    }\r\n    \r\n    @Input() set options(obj:any) { \r\n        this._options = {\r\n            ...this.customOptions,\r\n            ...this._options,\r\n            ...obj\r\n        };\r\n    }\r\n    get options(): any {\r\n        return this._options;\r\n    }\r\n    @Input() tableClass: any;\r\n    @Output() rowClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() checkboxClick: EventEmitter<any> = new EventEmitter<any>();\r\n    @ContentChild(CaptionComponent, { static: false }) captionRef: CaptionComponent\r\n\r\n    searchText: string = \"\";\r\n    currentPage = 1;\r\n    orderBy: { order: string, key: string } = { order: '', key: '' };\r\n    dataShowing: { start: number, end: number, len: number } = { start: 0, end: 0, len: 0 }\r\n    styleParams: any = { pinnedScollerMarginLeft: 0, pinnedFlag:false };\r\n\r\n    selectedCheckboxes = new Set();\r\n    selectedCheckList: any[] = [];\r\n    \r\n    openRowDetailsId = new Set();\r\n\r\n    constructor(\r\n        private dataShowingService: DataShowingService,\r\n        private  cdr: ChangeDetectorRef) { }\r\n\r\n    ngOnInit() {\r\n        this.columns.map((item, i) => {\r\n            item['sorting'] = item.hasOwnProperty('sorting') ? item['sorting'] : true;\r\n            item['headAlign'] = item.hasOwnProperty('headAlign') ? item['headAlign'].toLowerCase() : 'left';\r\n            item['sortingOrder'] = '';\r\n\r\n            if ( (item.hasOwnProperty('pinned') && item['pinned'] == true) ) {\r\n                /** working for pin the checkbox column */\r\n                // this.styleParams['pinnedFlag'] = true;\r\n                // if ( this.options.checkboxes == true && this.styleParams['pinnedFlag'] && i ==0) { \r\n                //     this.styleParams.pinnedScollerMarginLeft = 33;\r\n                // }\r\n\r\n                item['width'] = item.hasOwnProperty('width') ? item['width'] : 100;\r\n                item['pinnedMarginLeft'] = this.styleParams.pinnedScollerMarginLeft;\r\n                this.styleParams.pinnedScollerMarginLeft += parseInt(item['width']) + 20;\r\n            }\r\n        })\r\n\r\n        this.dataShowingFn(this.currentPage, this.options.rowPerPage, this.data.length)\r\n\r\n        /** subscription list */\r\n        this.dataShowingService.dataShowingSubject.subscribe(subData => {\r\n            subData['itemPerPage'] = subData.hasOwnProperty('itemPerPage') ? subData.itemPerPage : this.options.rowPerPage;\r\n            subData['currentPage'] = subData.hasOwnProperty('currentPage') ? subData.currentPage : this.currentPage;\r\n            subData['len'] = subData.hasOwnProperty('len') ? subData.len : this.dataShowing.len;\r\n            this.dataShowingFn(subData.currentPage, subData.itemPerPage, subData.len)\r\n        });\r\n\r\n    }\r\n    ngAfterContentInit() {\r\n        //console.log(this.headerRef);\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) { \r\n        //console.log(changes);\r\n    }\r\n    onInputSearch() {\r\n        this.currentPage = 1;\r\n    }\r\n    onChangeItemPerPage() {\r\n        this.currentPage = 1;\r\n        this.dataShowingService.setSataShowingSubject({ 'currentPage': this.currentPage, 'itemPerPage': this.options.rowPerPage });\r\n    }\r\n    onPageChange(currentPage) {\r\n        this.currentPage = currentPage;\r\n        this.dataShowingService.setSataShowingSubject({ 'currentPage': currentPage });\r\n    }\r\n    onClickOrderBy(colItem: any, index: number) {\r\n        if (colItem.sorting == true) {\r\n            this.columns.map((item) => { item.sortingOrder = '' });\r\n            this.orderBy = {\r\n                ...this.orderBy,\r\n                'order': this.orderBy.order == 'asc' ? 'desc' : 'asc',\r\n                'key' : colItem.key\r\n            };\r\n            this.columns[index]['sortingOrder'] = this.orderBy.order;\r\n        }\r\n    }\r\n    onRowClick(item: any) {\r\n        if (this.options.rowClickEvent)\r\n            this.rowClick.emit(item);\r\n    }\r\n\r\n    onCheckboxSelect(rowObj: any) { \r\n        if (this.selectedCheckboxes.has(rowObj._autoId)) {\r\n            this.selectedCheckboxes.delete(rowObj._autoId);\r\n            this.selectedCheckList = this.selectedCheckList.filter(item => {\r\n                return item._autoId != rowObj._autoId;\r\n            });\r\n        }\r\n        else { \r\n            this.selectedCheckboxes.add(rowObj._autoId);\r\n            this.selectedCheckList.push(rowObj);\r\n        }\r\n        this.checkboxClick.emit(this.selectedCheckList);\r\n    }\r\n    onCheckboxSelectAll(checked) { \r\n        this.selectedCheckboxes = new Set();\r\n        this.selectedCheckList = [];\r\n        if (checked) {\r\n            this.selectedCheckList = this.data.filter(item => {\r\n                this.selectedCheckboxes.add(item._autoId);\r\n                return true;\r\n            });\r\n        }\r\n        this.checkboxClick.emit(this.selectedCheckList);\r\n    }\r\n    onClickRowDettailArrowOpen(rowObj:any) { \r\n        if (this.openRowDetailsId.has(rowObj._autoId)) {\r\n            this.openRowDetailsId.delete(rowObj._autoId);\r\n        }\r\n        else { \r\n            this.openRowDetailsId.add(rowObj._autoId);\r\n        }\r\n    }\r\n    onClickRowDettailAllArrowOpen() { \r\n        if (this.openRowDetailsId.size != this.data.length) {\r\n            this.openRowDetailsId = new Set();\r\n            this.data.filter(item => {\r\n                this.openRowDetailsId.add(item._autoId);\r\n                return true;\r\n            });\r\n        }\r\n        else { \r\n            this.openRowDetailsId = new Set();\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    identify(index, item) {\r\n        return index;\r\n    }\r\n    private dataShowingFn(currentPage, itemPerPage, length) {\r\n        this.dataShowing.start = length == 0 ? 0 : ((currentPage - 1) * itemPerPage) + 1;\r\n        this.dataShowing.end = currentPage * itemPerPage > length ? length : currentPage * itemPerPage;\r\n        this.dataShowing.len = length;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { DataShowingService } from '../services/data-showing.service';\r\n\r\n@Pipe({\r\n    name: 'search',\r\n})\r\n  \r\nexport class SearchPipe implements PipeTransform {\r\n    constructor(private dataShowingService: DataShowingService) { }\r\n    \r\n    transform(array: any[], searchText: string): any {\r\n        if (typeof array === 'undefined') {\r\n            return;\r\n        }\r\n        if (typeof searchText === 'undefined' || Object.keys(searchText).length === 0 || searchText === '') {\r\n            this.dataShowingService.setSataShowingSubject({len: array.length });\r\n            return array;\r\n        }\r\n        const arr = array.filter((row) => {\r\n            const rowDetail = JSON.stringify(Object.values(row));\r\n            return  rowDetail.toLowerCase().indexOf(searchText.trim().toLowerCase()) > -1;\r\n        });\r\n        this.dataShowingService.setSataShowingSubject({len: arr.length});\r\n        return arr;\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'sort',\r\n    pure: true //default pure = true\r\n})\r\n  \r\nexport class SortPipe implements PipeTransform {\r\n\r\n    transform(array: any[], filter: { order: string, key: string }): any {\r\n        // console.log(\"sort pipe\" + JSON.stringify(filter));\r\n        // console.log(array);\r\n        if (!filter.key || filter.key === '') {\r\n            return array;\r\n        }\r\n        if (filter.order === '') {\r\n            return array;\r\n        }\r\n        if (filter.order === 'asc') {\r\n            return array.sort((a, b) => this.compare(a, b, filter.key));\r\n        } else {\r\n            return array.sort((a, b) => this.compare(b, a, filter.key));\r\n        }\r\n\r\n    }\r\n\r\n    private compare(a: any, b: any, key: string): number {\r\n        //return ('' + a[key]).localeCompare(b[key]);\r\n        //console.log(this.isNaN(a, b));\r\n        if (this.isNaN(a[key], b[key])) {\r\n            return (''+a[key]).localeCompare(b[key]);\r\n        } else {\r\n            if (parseFloat(a[key]) < parseFloat(b[key])) {\r\n              return -1;\r\n            }\r\n            if (parseFloat(a[key]) > parseFloat(b[key])) {\r\n              return 1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n    private  isNaN(aV: any, bV: any): boolean {\r\n        return (isNaN(parseFloat(aV)) || !isFinite(aV)) || (isNaN(parseFloat(bV)) || !isFinite(bV));\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {CommonModule} from \"@angular/common\";\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\nimport { NgxDatatableComponent } from './ngx-datatable.component';\r\nimport { CaptionComponent } from './caption/caption.component';\r\n\r\n\r\n\r\nimport { SearchPipe } from '../pipe/search.pipe';\r\nimport { SortPipe } from '../pipe/sort.pipe';\r\n\r\nimport { DataShowingService } from '../services/data-showing.service';\r\n\r\n@NgModule({\r\n  declarations: [NgxDatatableComponent, SearchPipe, SortPipe, CaptionComponent],\r\n  imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        NgxPaginationModule\r\n    ],\r\n    providers: [],\r\n    exports: [NgxDatatableComponent, CaptionComponent]\r\n})\r\nexport class NgxDatatableModule { }\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;IAIA;QAEI,uBAAkB,GAAG,IAAI,OAAO,EAAO,CAAC;KAQ3C;;;;;IALG,kDAAqB;;;;IAArB,UAAsB,IAAI;QACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtC;;gBAPJ,UAAU;;IAUX,yBAAC;CAVD,IAUC;;;IARG,gDAAwC;;;;;;;ACN5C;IAWI;KAAiB;;;;IAEjB,mCAAQ;;;IAAR;KAGC;;gBAbJ,SAAS,SAAC;oBACP,QAAQ,EAAE,aAAa;oBACvB,6DAAuC;oBAEvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;iBAClD;;;;IASD,uBAAC;CAdD;;;;;;;ICkEI,+BACY,kBAAsC,EACrC,GAAsB;QADvB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACrC,QAAG,GAAH,GAAG,CAAmB;QAzD3B,kBAAa,GAAkB,IAAI,OAAO,EAAQ,CAAC;QACnD,kBAAa,GAAG;YACpB,kBAAkB,EAAE,4BAA4B;YAChD,eAAe,EAAE,KAAK;YACtB,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;YACnC,YAAY,EAAE,EAAE;YAChB,QAAQ,EAAE,KAAK;YACf,YAAY,EAAE,KAAK;YACnB,mBAAmB,EAAC,SAAS;SAChC,CAAC;QACM,aAAQ,GAAQ,EAAE,CAAC;QACnB,UAAK,GAAU,EAAE,CAAC;QAGjB,YAAO,GAAG,gBAAgB,CAAC;QAC3B,YAAO,GAAU,EAAE,CAAC;QAyBnB,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;QACtD,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;QAGrE,eAAU,GAAW,EAAE,CAAC;QACxB,gBAAW,GAAG,CAAC,CAAC;QAChB,YAAO,GAAmC,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QACjE,gBAAW,GAAgD,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAA;QACvF,gBAAW,GAAQ,EAAE,uBAAuB,EAAE,CAAC,EAAE,UAAU,EAAC,KAAK,EAAE,CAAC;QAEpE,uBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;QAC/B,sBAAiB,GAAU,EAAE,CAAC;QAE9B,qBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;KAIW;IAzCxC,sBAAa,uCAAI;;;;QASjB;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;;;;QAXD,UAAkB,GAAS;YAA3B,iBAQC;YAPG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,GAAG,CAAC,OAAO;;;;;YAAC,UAAC,IAAI,EAAE,KAAK;gBACpB,KAAI,CAAC,KAAK,CAAC,IAAI,cACR,IAAI,IACP,SAAS,EAAE,KAAK,IAClB,CAAC;aACN,EAAC,CAAC;SACN;;;OAAA;IAAA,CAAC;IAKF,sBAAa,0CAAO;;;;QAOpB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;;;;;QATD,UAAqB,GAAO;YACxB,IAAI,CAAC,QAAQ,gBACN,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,QAAQ,EACb,GAAG,CACT,CAAC;SACL;;;OAAA;;;;IAwBD,wCAAQ;;;IAAR;QAAA,iBA6BC;QA5BG,IAAI,CAAC,OAAO,CAAC,GAAG;;;;;QAAC,UAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;YAC1E,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC;YAChG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;YAE1B,KAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,GAAI;;;;;;gBAO7D,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;gBACnE,IAAI,CAAC,kBAAkB,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC;gBACpE,KAAI,CAAC,WAAW,CAAC,uBAAuB,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;aAC5E;SACJ,EAAC,CAAA;QAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;;QAG/E,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,SAAS;;;;QAAC,UAAA,OAAO;YACxD,OAAO,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YAC/G,OAAO,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC;YACxG,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC;YACpF,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,CAAA;SAC5E,EAAC,CAAC;KAEN;;;;IACD,kDAAkB;;;IAAlB;;KAEC;;;;;IACD,2CAAW;;;;IAAX,UAAY,OAAsB;;KAEjC;;;;IACD,6CAAa;;;IAAb;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;KACxB;;;;IACD,mDAAmB;;;IAAnB;QACI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;KAC9H;;;;;IACD,4CAAY;;;;IAAZ,UAAa,WAAW;QACpB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAE,aAAa,EAAE,WAAW,EAAE,CAAC,CAAC;KACjF;;;;;;IACD,8CAAc;;;;;IAAd,UAAe,OAAY,EAAE,KAAa;QACtC,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,GAAG;;;;YAAC,UAAC,IAAI,IAAO,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA,EAAE,EAAC,CAAC;YACvD,IAAI,CAAC,OAAO,gBACL,IAAI,CAAC,OAAO,IACf,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,GAAG,MAAM,GAAG,KAAK,EACrD,KAAK,EAAG,OAAO,CAAC,GAAG,GACtB,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;SAC5D;KACJ;;;;;IACD,0CAAU;;;;IAAV,UAAW,IAAS;QAChB,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChC;;;;;IAED,gDAAgB;;;;IAAhB,UAAiB,MAAW;QACxB,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAC7C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC/C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM;;;;YAAC,UAAA,IAAI;gBACvD,OAAO,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;aACzC,EAAC,CAAC;SACN;aACI;YACD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACnD;;;;;IACD,mDAAmB;;;;IAAnB,UAAoB,OAAO;QAA3B,iBAUC;QATG,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;;;;YAAC,UAAA,IAAI;gBAC1C,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1C,OAAO,IAAI,CAAC;aACf,EAAC,CAAC;SACN;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACnD;;;;;IACD,0DAA0B;;;;IAA1B,UAA2B,MAAU;QACjC,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAC3C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAChD;aACI;YACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7C;KACJ;;;;IACD,6DAA6B;;;IAA7B;QAAA,iBAaC;QAZG,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM;;;;YAAC,UAAA,IAAI;gBACjB,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACxC,OAAO,IAAI,CAAC;aACf,EAAC,CAAC;SACN;aACI;YACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;SACrC;KAGJ;;;;;;IAED,wCAAQ;;;;;IAAR,UAAS,KAAK,EAAE,IAAI;QAChB,OAAO,KAAK,CAAC;KAChB;;;;;;;;IACO,6CAAa;;;;;;;IAArB,UAAsB,WAAW,EAAE,WAAW,EAAE,MAAM;QAClD,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,IAAI,WAAW,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,WAAW,GAAG,WAAW,GAAG,MAAM,GAAG,MAAM,GAAG,WAAW,GAAG,WAAW,CAAC;QAC/F,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC;KACjC;;gBAzLJ,SAAS,SAAC;oBACP,QAAQ,EAAE,eAAe;oBACzB,+6WAA6C;oBAE7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE,CAAC,kBAAkB,CAAC;;iBAElC;;;;gBAVQ,kBAAkB;gBAF6H,iBAAiB;;;0BA4BpK,KAAK;0BACL,KAAK;uBACL,KAAK;0BAaL,KAAK;6BAUL,KAAK;2BACL,MAAM;gCACN,MAAM;6BACN,YAAY,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;;IAuIrD,4BAAC;CA1LD,IA0LC;;;;;;IAjLG,8CAA2D;;;;;IAC3D,8CAQE;;;;;IACF,yCAA2B;;;;;IAC3B,sCAA0B;;IAG1B,wCAAoC;;IACpC,wCAA6B;;IAwB7B,2CAAyB;;IACzB,yCAAgE;;IAChE,8CAAqE;;IACrE,2CAA+E;;IAE/E,2CAAwB;;IACxB,4CAAgB;;IAChB,wCAAiE;;IACjE,4CAAuF;;IACvF,4CAAoE;;IAEpE,mDAA+B;;IAC/B,kDAA8B;;IAE9B,iDAA6B;;;;;IAGzB,mDAA8C;;;;;IAC9C,oCAA+B;;;;;;;;ACvEvC;IASI,oBAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;KAAK;;;;;;IAE/D,8BAAS;;;;;IAAT,UAAU,KAAY,EAAE,UAAkB;QACtC,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;YAC9B,OAAO;SACV;QACD,IAAI,OAAO,UAAU,KAAK,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,KAAK,EAAE,EAAE;YAChG,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAC,GAAG,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;YACpE,OAAO,KAAK,CAAC;SAChB;;YACK,GAAG,GAAG,KAAK,CAAC,MAAM;;;;QAAC,UAAC,GAAG;;gBACnB,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACpD,OAAQ,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;SACjF,EAAC;QACF,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAC,GAAG,EAAE,GAAG,CAAC,MAAM,EAAC,CAAC,CAAC;QACjE,OAAO,GAAG,CAAC;KACd;;gBArBJ,IAAI,SAAC;oBACF,IAAI,EAAE,QAAQ;iBACjB;;;;gBAJQ,kBAAkB;;IAwB3B,iBAAC;CAtBD,IAsBC;;;;;;IAjBe,wCAA8C;;;;;;;ACT9D;IAEA;KA0CC;;;;;;IAnCG,4BAAS;;;;;IAAT,UAAU,KAAY,EAAE,MAAsC;QAA9D,iBAeC;;;QAZG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,KAAK,EAAE,EAAE;YAClC,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;YACrB,OAAO,KAAK,CAAC;SAChB;QACD,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,EAAE;YACxB,OAAO,KAAK,CAAC,IAAI;;;;;YAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;SAC/D;aAAM;YACH,OAAO,KAAK,CAAC,IAAI;;;;;YAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;SAC/D;KAEJ;;;;;;;;IAEO,0BAAO;;;;;;;IAAf,UAAgB,CAAM,EAAE,CAAM,EAAE,GAAW;;;QAGvC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5B,OAAO,CAAC,EAAE,GAAC,CAAC,CAAC,GAAG,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC5C;aAAM;YACH,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC3C,OAAO,CAAC,CAAC,CAAC;aACX;YACD,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC3C,OAAO,CAAC,CAAC;aACV;SACJ;QACD,OAAO,CAAC,CAAC;KACZ;;;;;;;IACQ,wBAAK;;;;;;IAAd,UAAe,EAAO,EAAE,EAAO;QAC3B,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/F;;gBAzCJ,IAAI,SAAC;oBACF,IAAI,EAAE,MAAM;oBACZ,IAAI,EAAE,IAAI;iBACb;;IAuCD,eAAC;CA1CD;;;;;;ACFA;IAeA;KAUmC;;gBAVlC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,qBAAqB,EAAE,UAAU,EAAE,QAAQ,EAAE,gBAAgB,CAAC;oBAC7E,OAAO,EAAE;wBACH,WAAW;wBACX,YAAY;wBACZ,mBAAmB;qBACtB;oBACD,SAAS,EAAE,EAAE;oBACb,OAAO,EAAE,CAAC,qBAAqB,EAAE,gBAAgB,CAAC;iBACrD;;IACiC,yBAAC;CAVnC;;;;;;;;;;;;;;"}